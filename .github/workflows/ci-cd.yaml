name: Build, Push, and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  detect-dockerfile-changes:
    name: Detect Dockerfile Changes
    runs-on: ubuntu-latest
    outputs:
      dockerfile_changed: ${{ steps.filter.outputs.dockerfile }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if Dockerfile changed
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            dockerfile:
              - 'ci_cd/python/Dockerfile'

  detect-application-code-changes:
    name: Detect changes in application code
    runs-on: ubuntu-latest
    outputs:
      talk_booking_code_changed: ${{ steps.filter.outputs.talk_booking }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect file changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            talk_booking:
              - 'services/talk_booking/**/*'

  build-python-ci-image:
    runs-on: ubuntu-latest
    name: Build and Push Python CI Image to GHCR
    needs: detect-dockerfile-changes
    # Run only if Dockerfile changed
    if: needs.detect-dockerfile-changes.outputs.dockerfile_changed == 'true' && github.ref == 'refs/heads/main'

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: ghcr.io/${{ github.actor }}/talk-booking

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          cd ci_cd/python
          docker build -t $IMAGE_NAME:cicd-python3.11-slim .
          docker push $IMAGE_NAME:cicd-python3.11-slim

  build-docker-ci-image:
    runs-on: ubuntu-latest
    name: Build and Push Docker CI Image to GHCR

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: ghcr.io/${{ github.actor }}/talk-booking

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          cd ci_cd/docker
          docker build -t $IMAGE_NAME:talk-booking-cicd-docker .
          docker push $IMAGE_NAME:talk-booking-cicd-docker

  check-code-quality:
    name: Check Code Quality
    needs: detect-application-code-changes
    # Run only when talk_booking app code changed
    if: needs.detect-application-code-changes.outputs.talk_booking_code_changed == 'true'
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/${{ github.actor }}/talk-booking:cicd-python3.11-slim
      options: --user root

    defaults:
      run:
        working-directory: services/talk_booking

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: poetry install

      - name: Lint with flake8
        run: poetry run flake8 .

      - name: Check formatting with black
        run: poetry run black . --check

      - name: Check import sorting with isort
        run: poetry run isort . --check-only --profile black

      - name: Security scan with bandit
        run: poetry run bandit .

      - name: Check dependencies with safety
        run: poetry run safety check

  run-tests:
    name: Run Tests
    needs: detect-application-code-changes
    # Run only when talk_booking app code changed
    if: needs.detect-application-code-changes.outputs.talk_booking_code_changed == 'true'
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/${{ github.actor }}/talk-booking:cicd-python3.11-slim
      options: --user root

    defaults:
      run:
        working-directory: services/talk_booking

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run python -m pytest --junitxml=report.xml --cov=./ --cov-report=xml tests/unit tests/integration

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            slug: puneeth-y-s/talk-booking  

      - name: Upload test report artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:   
          name: junit-report
          path: services/talk_booking/report.xml

  remote-state-backend:
    uses: ./.github/workflows/remote-state-backend-config.yaml
    with:
      tf_root: infrastructure/backend_config
    secrets: inherit

  terraform-vpc:
    needs: remote-state-backend
    uses: ./.github/workflows/tf-vpc-config.yaml
    with:
      tf_root: infrastructure/global/vpc
    secrets: inherit

  talk-book-service:
    needs: terraform-vpc
    uses: ./.github/workflows/tf-talk-book-service.yaml
    with:
      tf_root: infrastructure/talk-booking-service/development
    secrets: inherit
